// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: samples.sql

package db

import (
	"context"
)

const getSampleById = `-- name: GetSampleById :one
SELECT id, name, created_at, updated_at FROM samples
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetSampleById(ctx context.Context, id int64) (Sample, error) {
	row := q.db.QueryRowContext(ctx, getSampleById, id)
	var i Sample
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getSamples = `-- name: GetSamples :many
SELECT id, name, created_at, updated_at FROM samples
`

func (q *Queries) GetSamples(ctx context.Context) ([]Sample, error) {
	rows, err := q.db.QueryContext(ctx, getSamples)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Sample
	for rows.Next() {
		var i Sample
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
